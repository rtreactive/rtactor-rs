[package]
name = "rtactor"
version = "0.5.2"
edition = "2021"
license = "MIT"
description = "An Actor framework specially designed for Real-Time constrained use cases."
readme = "README.md"
repository = "https://github.com/rtreactive/rtactor-rs"
rust-version = "1.75"
categories = ["asynchronous", "concurrency", "embedded"]
keywords = ["real-time", "actor", "framework", "async"]

[dependencies]
async-channel = { version = "2", optional = true }
mockall = {version = ">= 0.11, <= 0.13", optional = true}
rtactor-macros = { version="0.5.0", path = "rtactor-macros" }
smol = { version = "2.0", optional = true }
smol-macros = { version = "0.1", optional = true }

[dev-dependencies]
approx = "0.5"
assert2 = "0.3"
env_logger = ">= 0.9, <= 0.11"
log = "0.4"
macro_rules_attribute = "0.2.0"
mockall= ">= 0.11, <= 0.13"
oorandom = "11" # rand crate is way to big, complex and difficult to port to MCU
panic-context = "0.1"
rstest = ">=0.15, <= 0.25"
smol = "2.0"
smol-macros = "0.1"

[features]
default = ["async-actor"]
async-actor = ["dep:async-channel", "dep:smol", "dep:smol-macros"]
